

try{
        } catch (Exception e){
             LOGGER.error(e.getMessage());
             e.printStackTrace();
                 if(connection != null){
                     try {
                         connection.rollback();
                         System.out.println("Tuvimos un problema");
                         e.printStackTrace();
                     } catch (SQLException exception){
                         LOGGER.error(exception.getMessage());
                         exception.printStackTrace();
                     }
                 }
         } finally {
             try{
                 connection.close();
             } catch (Exception ex){
                 LOGGER.error("No se pudo cerrar la conexion: " + ex.getMessage());
             }
         }


         =================



 private static final Logger LOGGER = Logger.getLogger(Clase.class);

 ==============================

 public class SqlContantes {

     public static final String CREATE = "DROP TABLE IF EXISTS CUENTAS; CREATE TABLE CUENTAS(ID INT auto_increment PRIMARY KEY, NOMBRE VARCHAR(100) NOT NULL, NUMERO_CUENTA INT NOT NULL, SALDO NUMERIC(10, 2) NOT NULL)";

     public static final String INSERT = "INSERT INTO CUENTAS (NOMBRE, NUMERO_CUENTA, SALDO) VALUES(?,?,?)";

     public static final String  UPDATE = "UPDATE CUENTAS SET SALDO = ? WHERE NUMERO_CUENTA = ?";

     public static final String SELECT = "SELECT * FROM CUENTAS WHERE ID = ?";



 }


 ================================

  Cuenta cuenta = new Cuenta("Joel", 32323232, 500);

         Connection connection = null;
         try {
             connection = getConnection();
             connection.setAutoCommit(false);

             Statement st = connection.createStatement();
             st.execute(SqlContantes.CREATE);

             //insertar un registro en la tabla usando la cuyenta ya creada

             PreparedStatement ps = connection.prepareStatement(SqlContantes.INSERT);
             ps.setString(1, cuenta.getNombre());
             ps.setInt(2, cuenta.getNumeroDeCuenta());
             ps.setDouble(3, cuenta.getSaldo());
             ps.execute();

             //agregar 10 a la cuenta
             PreparedStatement psup = connection.prepareStatement(SqlContantes.UPDATE);
             //cuenta.setSaldo(cuenta.getSaldo() + 10);
             psup.setDouble(1, cuenta.getSaldo() + 10);
             psup.setInt(2, cuenta.getNumeroDeCuenta());
             psup.execute();

             psup.setDouble(1, cuenta.getSaldo() + 15);
             psup.setInt(2, cuenta.getNumeroDeCuenta());
             psup.execute();

           //int aux = 1 / 0;

             connection.commit();
             connection.setAutoCommit(true);

             PreparedStatement psSel = connection.prepareStatement(SqlContantes.SELECT);
             psSel.setInt(1, 1);
             ResultSet rs = psSel.executeQuery();
             while (rs.next()){
                 LOGGER.info(rs.getString(2) + " - Saldo $" + rs.getDouble(4) );
             }








